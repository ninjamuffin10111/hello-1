#!/usr/bin/env python3

"""Not yo grandma's hello world.

This program can be run from the command line (see
``parse_args()``) or imported as a module (``import hello``) so
that other programs can use its functions. That is
why the main code is under
the ``if __name__ == '__main__':`` block.

This documentation can be displayed with ``pydoc3 ./hello``
or converted to web page with any number of tools.

"""

import skilstak.colors as c
import time

def print_plain(message):
    """Prints <message> to the screen.

    Args:
        message (str): message to print 

    """
    print(message)

def print_multi(message):
    """Prints <message> in multiple colors like a Christmas tree (or Vegas sign).

    Args:
        message (str): message to print 

    """
    while True:
        print(c.clear + c.multi(message))
        time.sleep(0.5)

def print_color(message):
    """Fills the screen with randomly colored <message>s.
    
    Args:
        message (str): message to print 

    """
    print(c.clear)
    while True:
        print(c.rc() + message + c.reset, end=" ")

def parse_args():
    """Parse and return properties from the command line.

    Program accepts any of the following:

        hello
        hello You
        hello -c
        hello -m
        hello -c You
        hello -m You
   
    Returns:
        dict: A dictionary of properties (who, option)

    """

    # import here instead of top since only this function uses
    import sys

    # create a dictionary to hold our values
    p = {
        "who": "world",
        "option": ""
    }

    if len(sys.argv) > 2:
        p['option'] = sys.argv[1]
        p['who'] = sys.argv[2]
    elif len(sys.argv) == 2:
        if sys.argv[1].startswith("-"):
            p['option'] = sys.argv[1]
        else:
            p['who'] = sys.argv[1]
    return p 

if __name__ == '__main__':
    p = parse_args()
    option = p['option']
    message = 'Hello ' + p['who'] + '!'

    # the 'try/except' is to gracefully exit when <cntl>-c
    try:
        if option == "-m":
            print_multi(message)
        elif option == "-c":
            print_color(message)
        else:
            print_plain(message)
    except KeyboardInterrupt:
        exit()
